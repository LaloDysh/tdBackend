openapi: 3.0.0
info:
  title: TaxDown Motorbike Shop API
  description: API for managing customers in the motorbike shop with credit management
  version: 1.0.0
  contact:
    name: API Support
servers:
  - url: http://localhost:3000
    description: Local development server (serverless-offline)
  - url: https://your-api-id.execute-api.eu-west-1.amazonaws.com/dev
    description: Development environment (AWS)
  - url: https://your-api-id.execute-api.eu-west-1.amazonaws.com/prod
    description: Production environment (AWS)

paths:
  /customers:
    post:
      summary: Create a new customer
      description: Creates a new customer with the provided information
      tags:
        - Customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - phoneNumber
                - address
              properties:
                firstName:
                  type: string
                  example: John
                  description: Customer's first name
                lastName:
                  type: string
                  example: Doe
                  description: Customer's last name
                email:
                  type: string
                  format: email
                  example: john@example.com
                  description: Customer's email address
                phoneNumber:
                  type: string
                  example: "+34612345678"
                  description: Customer's phone number in international format
                address:
                  type: object
                  required:
                    - street
                    - city
                    - postalCode
                    - country
                  properties:
                    street:
                      type: string
                      example: Main St 123
                    city:
                      type: string
                      example: Madrid
                    postalCode:
                      type: string
                      example: "28001"
                    country:
                      type: string
                      example: Spain
                availableCredit:
                  type: number
                  format: double
                  example: 100
                  description: Initial credit amount (optional, defaults to 0)
            examples:
              basic:
                summary: Basic customer creation
                value:
                  firstName: John
                  lastName: Doe
                  email: john@example.com
                  phoneNumber: "+34612345678"
                  address:
                    street: Main St 123
                    city: Madrid
                    postalCode: "28001"
                    country: Spain
              withCredit:
                summary: Customer with initial credit
                value:
                  firstName: Jane
                  lastName: Smith
                  email: jane@example.com
                  phoneNumber: "+34687654321"
                  address:
                    street: Central Ave 456
                    city: Barcelona
                    postalCode: "08001"
                    country: Spain
                  availableCredit: 250.50
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: List all customers
      description: Retrieves a list of all customers
      tags:
        - Customers
      responses:
        '200':
          description: List of customers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customers/{id}:
    get:
      summary: Get customer by ID
      description: Retrieves a specific customer by their ID
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          description: Customer ID (UUID format)
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Customer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad request - Invalid customer ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update customer
      description: Updates an existing customer's information
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          description: Customer ID (UUID format)
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - phoneNumber
                - address
              properties:
                firstName:
                  type: string
                  example: Jane
                lastName:
                  type: string
                  example: Smith
                email:
                  type: string
                  format: email
                  example: jane@example.com
                phoneNumber:
                  type: string
                  example: "+34687654321"
                address:
                  type: object
                  required:
                    - street
                    - city
                    - postalCode
                    - country
                  properties:
                    street:
                      type: string
                      example: New St 456
                    city:
                      type: string
                      example: Barcelona
                    postalCode:
                      type: string
                      example: "08001"
                    country:
                      type: string
                      example: Spain
            examples:
              update:
                summary: Update customer information
                value:
                  firstName: Jane
                  lastName: Smith
                  email: jane.smith@example.com
                  phoneNumber: "+34687654321"
                  address:
                    street: Updated Street 789
                    city: Valencia
                    postalCode: "46001"
                    country: Spain
      responses:
        '200':
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete customer
      description: Deletes a customer by ID
      tags:
        - Customers
      parameters:
        - name: id
          in: path
          required: true
          description: Customer ID (UUID format)
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '204':
          description: Customer deleted successfully
        '400':
          description: Bad request - Invalid customer ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customers/{id}/credit:
    post:
      summary: Add credit to customer
      description: Adds credit amount to a customer's available credit
      tags:
        - Credit Management
      parameters:
        - name: id
          in: path
          required: true
          description: Customer ID (UUID format)
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  format: double
                  example: 50
                  description: Credit amount to add (must be positive)
            examples:
              addCredit:
                summary: Add credit to customer
                value:
                  amount: 75.50
              addLargeCredit:
                summary: Add large credit amount
                value:
                  amount: 500
      responses:
        '200':
          description: Credit added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '400':
          description: Bad request - Invalid amount or customer ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customers/sorted/by-credit:
    get:
      summary: List customers sorted by credit
      description: Retrieves all customers sorted by available credit amount
      tags:
        - Credit Management
      parameters:
        - name: order
          in: query
          required: false
          description: Sort order (asc for ascending, desc for descending)
          schema:
            type: string
            enum: [asc, desc]
            default: desc
          example: desc
      responses:
        '200':
          description: List of customers sorted by credit
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CustomerResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: "550e8400-e29b-41d4-a716-446655440000"
            firstName:
              type: string
              example: John
            lastName:
              type: string
              example: Doe
            email:
              type: string
              format: email
              example: john@example.com
            phoneNumber:
              type: string
              example: "+34612345678"
            address:
              type: object
              properties:
                street:
                  type: string
                  example: Main St 123
                city:
                  type: string
                  example: Madrid
                postalCode:
                  type: string
                  example: "28001"
                country:
                  type: string
                  example: Spain
            availableCredit:
              type: number
              format: double
              example: 100.50
            createdAt:
              type: string
              format: date-time
              example: "2024-01-15T10:30:00.000Z"
            updatedAt:
              type: string
              format: date-time
              example: "2024-01-15T10:30:00.000Z"

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Error message describing what went wrong"

tags:
  - name: Customers
    description: Customer management endpoints
  - name: Credit Management
    description: Customer credit management endpoints
